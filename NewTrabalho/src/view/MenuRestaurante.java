/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.ComandaDAO;
import model.Comanda;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Objects;

public class MenuRestaurante extends javax.swing.JFrame {

    private int comandaAtualId = -1;
    
    public MenuRestaurante() {
        initComponents();
        atualizarStatus();
        configurarBotoes();
        
        setTitle("TELA INICIAL");
        setSize(528, 634);
        setLocationRelativeTo(null);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNovaComanda = new javax.swing.JButton();
        btnAdicionarItem = new javax.swing.JButton();
        btnVisualizarComanda = new javax.swing.JButton();
        btnGerarRecibo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        btnNovaComanda.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnNovaComanda.setText("Nova Comanda");
        getContentPane().add(btnNovaComanda);
        btnNovaComanda.setBounds(120, 151, 300, 70);

        btnAdicionarItem.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnAdicionarItem.setText("Adicionar Item");
        btnAdicionarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarItemActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdicionarItem);
        btnAdicionarItem.setBounds(120, 240, 300, 70);

        btnVisualizarComanda.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnVisualizarComanda.setText("Visualizar Comanda");
        getContentPane().add(btnVisualizarComanda);
        btnVisualizarComanda.setBounds(120, 330, 300, 70);

        btnGerarRecibo.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnGerarRecibo.setText("Gerar Recibo");
        getContentPane().add(btnGerarRecibo);
        btnGerarRecibo.setBounds(120, 420, 300, 70);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SISTEMA RESTAURANTE");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(120, 60, 320, 33);
        getContentPane().add(lblStatus);
        lblStatus.setBounds(185, 589, 277, 0);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/mobilias-modernas-restaurante.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(-10, -120, 530, 870);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAdicionarItemActionPerformed

    private void configurarBotoes() {
        btnNovaComanda.addActionListener(e -> criarNovaComanda());
        btnAdicionarItem.addActionListener(e -> abrirAdicionarItem());
        btnVisualizarComanda.addActionListener(e -> abrirVisualizarComanda());
        btnGerarRecibo.addActionListener(e -> abrirGerarRecibo());
    }

    private void criarNovaComanda() {
        ComandaDAO comandaDAO = new ComandaDAO();
        comandaAtualId = comandaDAO.criarComanda();
        if (comandaAtualId != -1) {
            JOptionPane.showMessageDialog(this, "Nova comanda criada com ID: " + comandaAtualId);
            atualizarStatus();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao criar comanda!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void abrirAdicionarItem() {
        SelecionarComanda selecionar = new SelecionarComanda();
        selecionar.setVisible(true);
        selecionar.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                Comanda selecionada = selecionar.getComandaSelecionada();
                if (selecionada != null) {
                    comandaAtualId = selecionada.getId();
                    atualizarStatus();
                    new AdicionarItem(MenuRestaurante.this, comandaAtualId).setVisible(true);
                }
            }
        });
    }

    private void abrirVisualizarComanda() {
        SelecionarComanda selecionar = new SelecionarComanda();
        selecionar.setVisible(true);
        selecionar.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                Comanda selecionada = selecionar.getComandaSelecionada();
                if (selecionada != null) {
                    comandaAtualId = selecionada.getId();
                    atualizarStatus();
                    new VisualizarComanda(comandaAtualId).setVisible(true);
                }
            }
        });
    }

    private void abrirGerarRecibo() {
        SelecionarComanda selecionar = new SelecionarComanda();
        selecionar.setVisible(true);
        selecionar.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                Comanda selecionada = selecionar.getComandaSelecionada();
                if (selecionada != null) {
                    comandaAtualId = selecionar.getComandaSelecionada().getId();
                    atualizarStatus();
                    new GerarRecibo(comandaAtualId).setVisible(true);
                }
            }
        });
    }

    private void atualizarStatus() {
        if (comandaAtualId == -1) {
            lblStatus.setText("Nenhuma comanda aberta");
        } else {
            lblStatus.setText("Comanda atual: #" + comandaAtualId);
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuRestaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuRestaurante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarItem;
    private javax.swing.JButton btnGerarRecibo;
    private javax.swing.JButton btnNovaComanda;
    private javax.swing.JButton btnVisualizarComanda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables
}
